@page "/RestaurarContraseña"

@using BLL

@inject IToastService toast
@inject NavigationManager nav 

<div class="container">
    <div class="row">
        <div class="col-sm-9 col-md-7 col-lg-5 mx-auto">
            <div class="card card-signin my-5">
                <div class="card-header text-center">
                    <h3>Restaurar contraseña</h3>
                </div>

                <div class="card-body">
                    <div class="form-group">
                        <label>Nombre de usuario: </label>
                        <input type="text" class="form-control" @bind="Usuario" />
                    </div>
                    <div class="form-group">
                        <label>Email: </label>
                        <input type="text" class="form-control" @bind="Email" />
                    </div>

                </div>
                <div class="card-footer">
                    <div class="form-group text-center">
                        <button type="button" class="btn btn-success btn-block" @onclick="EnviarCorreo"><span class="oi oi-check"></span> Enviar</button>
                        <br />
                        <a class="form-label-group text-center mt-2" href="/LogInPage">Volver al login</a>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@code {
    public int UsuarioId { get; set; } = 0;
    public string Usuario { get; set; } = string.Empty;
    public string Email { get; set; } = string.Empty;

    public void EnviarSolicitud()
    {
        ValidarDatos();
    }

    public void ValidarDatos()
    {
        UsuariosBLL repositorio = new UsuariosBLL();
        List<Usuarios> listaUsuarios = repositorio.GetList(p => true);

        foreach (var item in listaUsuarios)
        {
            if(item.NombreUsuario == Usuario && item.Email == Email)
            {
                UsuarioId = item.UsuarioId;
                EnviarCorreo();
            }
            else
            {
                toast.ShowError("El usuario o email ingresado es invalido");
            }
        }
    }

    public void EnviarCorreo()
    {
        UsuariosBLL repositorio = new UsuariosBLL();

        string YourUserName = repositorio.Buscar(UsuarioId).NombreUsuario;
        string YourPassWord = UsuariosBLL.Desencriptar(repositorio.Buscar(UsuarioId).ClaveUsuario);

        System.Net.Mail.MailMessage msg = new System.Net.Mail.MailMessage();

        msg.To.Add(Email);
        msg.Subject = "Agroproductores Los Cocos";
        msg.SubjectEncoding = System.Text.Encoding.UTF8;
        msg.Body = $"Nombre de usuario: {YourUserName} <br/> Contraseña: {YourPassWord}";
        msg.BodyEncoding = System.Text.Encoding.UTF8;
        msg.IsBodyHtml = true;
        msg.From = new System.Net.Mail.MailAddress("agroproductoresloscocos@gmail.com");

        System.Net.Mail.SmtpClient cliente = new System.Net.Mail.SmtpClient();

        cliente.Credentials = new System.Net.NetworkCredential("agroproductoresloscocos@gmail.com", "Cocos1234");

        cliente.Port = 587;
        cliente.DeliveryMethod = System.Net.Mail.SmtpDeliveryMethod.Network;
        cliente.EnableSsl = true;

        cliente.Host = "smtp.gmail.com";

        try
        {
            cliente.Send(msg);
            toast.ShowSuccess("¡Su contraseña ha sido restaurada!");
        }
        catch (Exception)
        {
            toast.ShowError("Ha ocurrido un error a la hora de enviar el correo, vuelva a intentarlo más tarde", "Mensaje no enviado");
        }

    }
}
