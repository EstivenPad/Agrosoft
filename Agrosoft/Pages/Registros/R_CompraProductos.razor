@page "/RegistroCompraProductos"

@using Models
@using BLL

@inject IToastService toast

@if (AuthenticationStateProvider.GetAuthenticationStateAsync().Result.User.Identity.IsAuthenticated)
{
    <EditForm Model="Compra" OnValidSubmit="Guardar">
        <DataAnnotationsValidator />
        <div class="card border-success">
            <div class="card-header bg-success text-lg-center" style="border-radius:5px;">
                <h3 style="font-family:Georgia; color:white">Registro de compras</h3>
            </div>

            <div class="card-body">
                <form>
                    @*CompraId*@
                    <div class="form-row justify-content-between">
                        <div class="col-5">
                            <div class="form-group">
                                <label>Compra Id</label>
                                <div class="input-group">
                                    <InputNumber @bind-Value="Compra.CompraId" min="0" class="form-control col" />
                                    <div class="input-group-append">
                                        <button type="button" class="btn btn-primary input-group-text" @onclick="Buscar">
                                            <span class="oi oi-magnifying-glass"> </span>Buscar
                                        </button>
                                    </div>
                                </div>
                            </div>
                        </div>

                        @*Fecha*@
                        <div class="form-group col-4">
                            <label>Fecha</label>
                            <InputDate @bind-Value="Compra.Fecha" class="form-control" />
                            <ValidationMessage For="@(() => Compra.Fecha)" />
                        </div>
                    </div>

                    @*Proveedor*@
                    <div class="form-group">
                        <label>Proveedor</label>
                        <div class="input-group">
                            <select class="form-control" @bind="Compra.ProveedorId">
                                <option value="0" disabled>Seleccione una opcion</option>
                                @foreach (var item in ListaProveedores)
                                {
                                    <option value="@item.ProveedorId">@item.Nombres</option>
                                }
                            </select>
                            <div class="input-group-append">
                                <NavLink type="button" class="btn btn-primary" href="RegistroProveedores">
                                    <i class="oi oi-plus" aria-hidden="true" />
                                </NavLink>
                            </div>
                        </div>
                        <ValidationMessage For="@(()=>Compra.ProveedorId)" />
                    </div>

                    @*Datos del detalle*@
                    <div class="card border-dark">
                        <div class="card-header-tabs text-center mt-2">
                            <h5 style="font-family:Georgia; font-style:unset">Productos</h5>
                        </div>

                        <div class="card-body">
                            <div class="row">
                                @*Producto*@
                                <div class="form-group col">
                                    <label>Producto</label>
                                    <div class="input-group">
                                        <select class="form-control" @bind="productoId" @onfocusout="LLenarCosto">
                                            <option value="0" disabled>Seleccione una opcion</option>
                                            @foreach (var item in ListaProductos)
                                            {
                                                <option value="@item.ProductoId">@(item.Nombre + " " + item.Marca + " " + metodosUnidad.Buscar(item.UnidadMedida).Descripcion)</option>
                                            }
                                        </select>
                                        <div class="input-group-append">
                                            <NavLink type="button" class="btn btn-primary" href="RegistroProductos">
                                                <i class="oi oi-plus" aria-hidden="true" />
                                            </NavLink>
                                        </div>
                                    </div>
                                </div>
                            </div>

                            <div class="row">
                                @*Cantidad*@
                                <div class="form-group col">
                                    <label>Cantidad</label>
                                    <InputNumber @bind-Value="cantidad" min="0" class="form-control" @onfocusout="CalcularImporte" />
                                </div>

                                @*Costo*@
                                <div class="form-group col">
                                    <label>Costo</label>
                                    <InputNumber @bind-Value="costo" min="0" class="form-control" @onfocusout="CalcularImporte" readOnly="true" />
                                </div>

                                @*Importe*@
                                <div class="form-group col">
                                    <label>Importe</label>
                                    <div class="input-group">
                                        <InputNumber @bind-Value="importe" class="form-control" readOnly="true" />
                                        <div class="input-group-append">
                                            <button type="button" class="btn btn-outline-info" @onclick="AgregarDetalle">
                                                <i class="oi oi-plus" aria-hidden="true" /> Agregar
                                            </button>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>

                    @*Tabla del detalle*@
                    <table class="table table-hover mt-3">
                        <thead class="thead-dark">
                            <tr>
                                <th scope="col">Producto</th>
                                <th scope="col">Cantidad</th>
                                <th scope="col">Costo</th>
                                <th scope="col">Importe</th>
                                <th scope="col">Opcion</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var item in Compra.CompraProductosDetalle)
                            {
                                <tr>
                                    <td>@metodosProducto.Buscar(item.ProductoId).Nombre</td>
                                    <td>@item.Cantidad</td>
                                    <td>@item.Precio</td>
                                    <td>@(item.Cantidad * item.Precio)</td>
                                    <td><button type="button" class="btn btn-outline-danger" @onclick="(() => EliminarDetalle(item))">Remover</button></td>
                                </tr>
                            }
                        </tbody>
                    </table>

                    @*Total*@
                    <div class="card-footer">
                        <label>Monto</label>
                        <InputNumber @bind-Value="Compra.Total" class="form-control col-4" readOnly="true" />
                    </div>
                </form>
            </div>

            <div class="card-footer">
                <div class="form-group text-center" display: inline-block>
                    <button type="button" class="btn btn-lg btn-primary" @onclick="Nuevo"> <span class="oi oi-file"></span> Nuevo </button>
                    <button type="submit" class="btn btn-lg btn-success"> <span class="oi oi-cloud"></span> Guardar </button>
                    <button type="button" class="btn btn-lg btn-danger" @onclick="Eliminar"> <span class="oi oi-trash"></span> Eliminar </button>
                </div>
            </div>
        </div>
    </EditForm>
}
else @*Si no ha iniciado sesion*@
{
    <div class="card border-dark text-center">
        <div class="card-header bg-danger text-lg-center" style="border-radius:5px;">
            <h4 style="font-family:Georgia; color:white">No inicio de sesión</h4>
        </div>
        <div class="card-body">
            <h5><span class="fa fa-exclamation-triangle"></span> &nbsp; Atención</h5>
            <p>¡Debe iniciar sesión para poder tener acceso!</p>
            <a href="/" class="btn btn-outline-warning">Volver al inicio</a>
        </div>
    </div>
}


@code {
    CompraProductos Compra = new CompraProductos();
    private List<Proveedores> ListaProveedores = new List<Proveedores>();
    private List<Productos> ListaProductos = new List<Productos>();
    RepositorioBase<Proveedores> metodosProveedor = new RepositorioBase<Proveedores>();
    RepositorioBase<Productos> metodosProducto = new RepositorioBase<Productos>();
    RepositorioBase<UnidadesMedida> metodosUnidad = new RepositorioBase<UnidadesMedida>();

    private int compraId;
    private int cantidad;
    private int productoId;
    private decimal costo;
    private decimal importe;

    protected override void OnInitialized()
    {
        Nuevo();
        Buscar();
        CargarProveedores();
        CargarProductos();
    }

    public void LLenarCosto()
    {
        if (productoId == 0)
            return;

        costo = metodosProducto.Buscar(productoId).Costo;
    }

    public void CargarProveedores()
    {
        ListaProveedores = metodosProveedor.GetList(p => true);
    }

    public void CargarProductos()
    {
        ListaProductos = metodosProducto.GetList(p => true);
    }

    private void Nuevo()
    {
        this.Compra = new CompraProductos();

        cantidad = 0;
        compraId = 0;
        productoId = 0;
        costo = 0;
        Compra.UsuarioId = GetUsuarioId();
    }

    public int GetUsuarioId()
    {
        int id;
        Contexto db = new Contexto();
        id = db.Usuarios.Where(A => A.NombreUsuario.Equals(AuthenticationStateProvider.GetAuthenticationStateAsync().Result.User.Identity.Name)).Select(A => A.UsuarioId).FirstOrDefault();

        return id;
    }

    private void Buscar()
    {
        if (Compra.CompraId > 0)
        {
            var encontrado = CompraProductosBLL.Buscar(Compra.CompraId);

            if (encontrado != null)
            {
                this.Compra = encontrado;
                CalcularTotalCompra();
            }
            else
            {
                toast.ShowWarning("¡No encontrado!");
            }
        }
    }

    private void Guardar()
    {
        bool guardo;
        if (Compra.CompraProductosDetalle.Count <= 0)
        {
            toast.ShowError("¡Debe agregar al menos un producto al detalle!");
        }
        else
        {
            guardo = CompraProductosBLL.Guardar(Compra);

            if (guardo)
            {
                Nuevo();
                toast.ShowSuccess("¡Guardado!");
            }
            else
                toast.ShowError("¡No Guardado!");
        }
    }

    private void Eliminar()
    {
        bool eliminar;

        eliminar = CompraProductosBLL.Eliminar(Compra.CompraId);

        if (eliminar)
        {
            Nuevo();
            toast.ShowSuccess("¡Eliminado!");
        }
        else
            toast.ShowError("¡No eliminado");
    }

    private void AgregarDetalle()
    {
        if (productoId > 0)
        {
            if (cantidad > 0)
            {
                Compra.CompraProductosDetalle.Add(new CompraProductosDetalle
                {
                    Id = 0,
                    CompraId = Compra.CompraId,
                    ProductoId = productoId,
                    Cantidad = cantidad,
                    Precio = costo

                });
            }
            else
            {
                toast.ShowError("¡Debe introducir la cantidad!");
                return;
            }
        }
        else
        {
            toast.ShowError("¡Debe seleccionar un producto!");
        }

        compraId = Compra.CompraId;
        productoId = 0;
        cantidad = 0;
        costo = 0;
        importe = 0;

        CalcularTotalCompra();

    }

    private void EliminarDetalle(CompraProductosDetalle detalle)
    {
        Compra.CompraProductosDetalle.Remove(detalle);
        CalcularTotalCompra();
    }

    private void CalcularTotalCompra()
    {
        decimal monto = 0;
        foreach (var item in Compra.CompraProductosDetalle)
        {
            monto += (item.Cantidad * metodosProducto.Buscar(item.ProductoId).Costo);
        }
        Compra.Total = monto;
    }

    private void CalcularImporte()
    {
        importe = cantidad * costo;
    }
}