@page "/LogInPage"

<EditForm Model="Usuario">
    <DataAnnotationsValidator />

    <div class="card">
        <div class="form-group">
            
        </div>

        <div class="card-body">
            <form>
                <div class="form-group">
                    <label>Usuario</label>
                    <InputText @bind-Value="Usuario.NombreUsuario" class="form-control" />
                    <ValidationMessage For="(()=> Usuario.NombreUsuario)"></ValidationMessage>
                </div>

                <div class="form-group">
                    <label>Contraseña</label>
                    <input type="password" class="form-control" @bind-value="Usuario.ClaveUsuario" />
                    <ValidationMessage For="(()=> Usuario.ClaveUsuario)"></ValidationMessage>
                </div>

                <div class="form-group">
                    <a class="btn btn-success btn-block"
                       href="/login?Usuario=@Encode(Usuario.NombreUsuario)&Clave=@Encode(Usuario.ClaveUsuario)" @onmouseover="ValidarCampos" target="_top">Login</a>

                    <a class="btn btn-danger btn-block" href="/">Volver al Home</a>
                </div>
            </form>
        </div>
    </div>
</EditForm>

@code {
    Usuarios Usuario = new Usuarios();

    protected override void OnInitialized()
    {
        Usuario = new Usuarios();
    }

    private string Encode(string param)
    {
        return HttpUtility.UrlEncode(param);
    }

    private void ValidarCampos()
    {
        if (string.IsNullOrEmpty(Usuario.NombreUsuario) || string.IsNullOrEmpty(Usuario.NombreUsuario))
        {
            toast.ShowError("Los campos no pueden estar vacios");
        }
    }
}