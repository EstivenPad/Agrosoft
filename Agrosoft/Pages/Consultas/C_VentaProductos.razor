@page "/ConsultaVentaProductos"

@using BLL
@using Models

@inject IToastService toast
@if (AuthenticationStateProvider.GetAuthenticationStateAsync().Result.User.Identity.IsAuthenticated)
{
    <div class="card border-success">
        <div class="card-header bg-success text-lg-center" style="border-radius:5px;">
            <h3 style="font-family:Georgia; color:white">Consulta de ventas</h3>
        </div>

        <div class="card-body">
            <div class="row">
                @*Desde*@
                <div class="form-group col-2">
                    <label>Desde</label>
                    <input type="date" class="form-control" @bind="Desde" />
                </div>

                @*Hasta*@
                <div class="form-group col-2">
                    <label>Hasta</label>
                    <input type="date" class="form-control" @bind="Hasta" />
                </div>

                @*Filtro*@
                <div class="form-group col-sm-4">
                    <label>Filtro</label>
                    <select @bind="Filtro" class="form-control">
                        <option value="0" disabled>Elija una opcion</option>
                        <option value="1">Todo</option>
                        <option value="2">Código</option>
                        <option value="3">Cliente</option>
                        <option value="4">Tipo de factura</option>
                        <option value="5">Ventas del día</option>
                    </select>
                </div>

                @*Criterio*@
                <div class="form-group col">
                    <label>Criterio</label>
                    <div class="input-group">
                        <input type="text" @bind="Criterio" class="form-control" />
                        <div class="input-group-append">
                            <button type="button" class="btn btn-primary input-group-text" @onclick="Consultar">
                                <span class="oi oi-magnifying-glass" aria-hidden="true"></span>Consultar
                            </button>
                        </div>
                    </div>
                </div>
            </div>

            @*Tabla*@
            <table class="table">
                <thead class="thead-dark">
                    <tr>
                        <th>Código</th>
                        <th>Fecha</th>
                        <th>Cliente</th>
                        <th>Tipo de factura</th>
                        <th>Total</th>
                    </tr>
                </thead>

                @foreach (var item in ListaVentas)
                {
                    <tr>
                        <td>@item.VentaId</td>
                        <td>@item.Fecha</td>
                        <td>@(repositorioClientes.Buscar(item.ClienteId).Nombres + " " + repositorioClientes.Buscar(item.ClienteId).Apellidos)</td>
                        <td>@item.TipoFactura</td>
                        <td>@item.Total</td>
                    </tr>
                }
            </table>
        </div>

        <div class="card-footer">
            <div class="form-group">
                <label>Total de ventas: @Total</label>
            </div>
        </div>
    </div>
}
else @*Si no ha iniciado sesion*@
{
    <div class="card border-dark text-center">
        <div class="card-header bg-danger text-lg-center" style="border-radius:5px;">
            <h4 style="font-family:Georgia; color:white">No inicio de sesión</h4>
        </div>
        <div class="card-body">
            <h5><span class="fa fa-exclamation-triangle"></span> &nbsp; Atención</h5>
            <p>¡Debe iniciar sesión para poder tener acceso!</p>
            <a href="/" class="btn btn-outline-warning">Volver al inicio</a>
        </div>
    </div>
}

@code {
    public int Total { get; set; }
    public int Filtro { get; set; }
    public string Criterio { get; set; }
    private DateTime Desde = DateTime.Now;
    private DateTime Hasta = DateTime.Now;

    private List<VentaProductos> ListaVentas = new List<VentaProductos>();
    public VentaProductosBLL repositorioVentas = new VentaProductosBLL();
    public RepositorioBase<Clientes> repositorioClientes = new RepositorioBase<Clientes>();

    public void Consultar()
    {
        int id = 0;

        if (string.IsNullOrWhiteSpace(Criterio))
        {
            if (Filtro == 5)
            {
                ListaVentas = VentaProductosBLL.GetVentasDelDia();
            }
            else
            {
                ListaVentas = repositorioVentas.GetList(x => true);
                ListaVentas = ListaVentas.Where(c => c.Fecha.Date >= Desde.Date && c.Fecha.Date <= Hasta.Date).ToList();
            }
            CalcularTotal();

            if (ListaVentas.Count == 0)
            {
                toast.ShowInfo("¡No hay datos para mostrar!");
            }
        }
        else
        {
            switch (Filtro)
            {
                case 1:
                    ListaVentas = repositorioVentas.GetList(p => true);
                    break;

                case 2:
                    id = Convert.ToInt32(Criterio);
                    ListaVentas = repositorioVentas.GetList(p => p.VentaId == id);
                    break;

                case 3:
                    id = 0;
                    List<Clientes> clientes = repositorioClientes.GetList(p => true);

                    foreach (var item in clientes)
                    {
                        if (Criterio.Contains(item.Nombres))
                            id = item.ClienteId;
                        else if (Criterio.Contains(item.Apellidos))
                            id = item.ClienteId;
                    }

                    ListaVentas = repositorioVentas.GetList(p => p.ClienteId == id);
                    break;

                case 4:
                    int auxiliar = 0;

                    if (Criterio.Contains("A credito"))
                        auxiliar = 1;
                    else if (Criterio.Contains("A contado"))
                        auxiliar = 2;

                    ListaVentas = repositorioVentas.GetList(p => p.TipoFactura == auxiliar);
                    break;
            }
            CalcularTotal();
            if (ListaVentas.Count == 0)
            {
                toast.ShowInfo("¡No hay datos para mostrar!");
            }
        }
    }

    public void CalcularTotal()
    {
        Total = 0;

        foreach (var item in ListaVentas)
        {
            Total++;
        }
    }
}