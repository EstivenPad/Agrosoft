@page "/ConsultaProductos"

@using Models
@using BLL

@inject IToastService toast;

@if (AuthenticationStateProvider.GetAuthenticationStateAsync().Result.User.Identity.IsAuthenticated)
{
    <div class="card border-success">
        <div class="card-header bg-success text-lg-center" style="border-radius:5px;">
            <h3 style="font-family:Georgia; color:white">Consulta de productos</h3>
        </div>

        <div class="card-body">
            <div class="row">
                @*Filtro*@
                <div class="form-group col">
                    <label>Filtro</label>
                    <select @bind="filtro" class="form-control">
                        <option value="0" disabled>Elija una opcion</option>
                        <option value="1">Todo</option>
                        <option value="2">Código</option>
                        <option value="3">Nombre</option>
                        <option value="4">Marca</option>
                    </select>
                </div>

                @*Criterio*@
                <div class="form-group col">
                    <label>Criterio</label>
                    <div class="input-group">
                        <input type="text" @bind="criterio" class="form-control" />
                        <div class="input-group-append">
                            <button type="button" class="btn btn-primary input-group-text" @onclick="Consultar">
                                <span class="oi oi-magnifying-glass" aria-hidden="true"></span>Consultar
                            </button>
                        </div>
                    </div>
                </div>
            </div>


            @*Tabla*@
            <table class="table table-hover">
                    <thead class="thead-dark">
                        <tr>
                            <th>Código</th>
                            <th>Nombre</th>
                            <th>Marca</th>
                            <th>Cantidad minima</th>
                            <th>Cantidad existente</th>
                            <th>Precio</th>
                            <th>Costo</th>
                        </tr>
                    </thead>

                    <tbody>
                        @foreach (var articulo in ListaProductos)
                        {
                            <tr>
                                <td>@articulo.ProductoId</td>
                                <td>@articulo.Nombre</td>
                                <td>@articulo.Marca</td>
                                <td>@articulo.CantidadMinima</td>
                                <td>@articulo.CantidadExistente</td>
                                <td>@articulo.Precio</td>
                                <td>@articulo.Costo</td>
                            </tr>
                        }
                    </tbody>
                </table>

        </div>
    </div>
}
else @*Si no ha iniciado sesion*@
{
    <div class="card border-dark text-center">
        <div class="card-header bg-danger text-lg-center" style="border-radius:5px;">
            <h4 style="font-family:Georgia; color:white">No inicio de sesión</h4>
        </div>
        <div class="card-body">
            <h5><span class="fa fa-exclamation-triangle"></span> &nbsp; Atención</h5>
            <p>¡Debe iniciar sesión para poder tener acceso!</p>
            <a href="/" class="btn btn-outline-warning">Volver al inicio</a>
        </div>
    </div>
}

@code {
    List<Productos> ListaProductos = new List<Productos>();
    RepositorioBase<Productos> repositorioProductos = new RepositorioBase<Productos>();

    private int filtro;
    private string criterio;

    private void Consultar()
    {
        if (string.IsNullOrWhiteSpace(criterio))
        {
            ListaProductos = repositorioProductos.GetList(x => true);
            if (ListaProductos.Count == 0)
            {
                toast.ShowInfo("¡No hay datos para mostrar!");
            }
        }
        else
        {
            switch (filtro)
            {
                case 0:
                    toast.ShowError("¡Opcion incorrecta!");
                    break;
                case 1:
                    ListaProductos = repositorioProductos.GetList(x => true);
                    break;
                case 2:
                    int id = Convert.ToInt32(criterio);
                    ListaProductos = repositorioProductos.GetList(x => x.ProductoId == id);
                    break;
                case 3:
                    ListaProductos = repositorioProductos.GetList(x => x.Nombre == criterio);
                    break;
                case 4:
                    ListaProductos = repositorioProductos.GetList(x => x.Marca == criterio);
                    break;
            }
            if (ListaProductos.Count == 0)
            {
                toast.ShowInfo("¡No hay datos para mostrar!");
            }
        }
    }
}