@page "/ConsultaUsuarios"

@using BLL
@using Models

@inject IToastService toast
@if (AuthenticationStateProvider.GetAuthenticationStateAsync().Result.User.Identity.IsAuthenticated)
{
    @if (!TipoUsuario)
    {
        <div class="card border-dark text-center">
            <div class="card-header bg-danger text-lg-center" style="border-radius:5px;">
                <h4 style="font-family:Georgia; color:white">Usuario no autorizado</h4>
            </div>
            <div class="card-body">
                <h5><span class="fa fa-exclamation-triangle"></span> &nbsp; Atención</h5>
                <p>¡Sólo un usuario de tipo administrador tiene acceso!</p>
                <a href="/" class="btn btn-outline-warning">Volver al inicio</a>
            </div>
        </div>
    }
    else
    {
        <div class="card border-success">
            <div class="card-header bg-success text-lg-center" style="border-radius:5px;">
                <h3 style="font-family:Georgia; color:white">Consulta de usuarios</h3>
            </div>

            <div class="card-body">
                <div class="row">
                    @*Filtro*@
                    <div class="form-group col">
                        <label>Filtro</label>
                        <select @bind="Filtro" class="form-control">
                            <option value="0" disabled>Elija una opción</option>
                            <option value="1">Todo</option>
                            <option value="2">Código</option>
                            <option value="3">Nombres</option>
                            <option value="4">Apellidos</option>
                            <option value="5">Nombre de usuario</option>
                            <option value="6">Tipo de usuario</option>
                        </select>
                    </div>

                    @*Criterio*@
                    <div class="form-group col">
                        <label>Criterio</label>
                        <div class="input-group">
                            <input type="text" @bind="Criterio" class="form-control" />
                            <div class="input-group-append">
                                <button type="button" class="btn btn-primary input-group-text" @onclick="Consultar">
                                    <span class="oi oi-magnifying-glass" aria-hidden="true"></span>Consultar
                                </button>
                            </div>
                        </div>
                    </div>
                </div>


                @*Tabla*@
                <table class="table table-hover">
                    <tr class="thead-dark">
                        <th>Código</th>
                        <th>Nombres</th>
                        <th>Apellidos</th>
                        <th>Direccion</th>
                        <th>Nombre de usuario</th>
                        <th>Tipo de usuario</th>
                    </tr>

                    @foreach (var item in ListaUsuarios)
                    {
                        <tr>
                            <td>@item.UsuarioId</td>
                            <td>@item.Nombres</td>
                            <td>@item.Apellidos</td>
                            <td>@item.Direccion</td>
                            <td>@item.NombreUsuario</td>
                            <td>@item.TipoUsuario</td>
                        </tr>
                    }
                </table>

                <div class="card-footer">
                    <div class="form-group">
                        <label>Total de usuarios: @Total</label>
                    </div>
                </div>
            </div>
        </div>
    }
}
else @*Si no ha iniciado sesion*@
{
    <div class="card border-dark text-center">
        <div class="card-header bg-danger text-lg-center" style="border-radius:5px;">
            <h4 style="font-family:Georgia; color:white">No inicio de sesión</h4>
        </div>
        <div class="card-body">
            <h5><span class="fa fa-exclamation-triangle"></span> &nbsp; Atención</h5>
            <p>¡Debe iniciar sesión para poder tener acceso!</p>
            <a href="/" class="btn btn-outline-warning">Volver al inicio</a>
        </div>
    </div>
}

@code {
    public int Total { get; set; }
    public int Filtro { get; set; }
    public string Criterio { get; set; }
    private bool TipoUsuario = false;

    private List<Usuarios> ListaUsuarios = new List<Usuarios>();
    public RepositorioBase<Usuarios> repositorioUsuarios = new RepositorioBase<Usuarios>();

    protected override void OnInitialized()
    {
        TipoUsuario = GetAuthorization();
    }

    private bool GetAuthorization()
    {
        bool acceso;

        if (AuthenticationStateProvider.GetAuthenticationStateAsync().Result.User.IsInRole("Administrador"))
            acceso = true;
        else
            acceso = false;

        return acceso;
    }

    public void Consultar()
    {
        if (string.IsNullOrWhiteSpace(Criterio))
        {
            ListaUsuarios = repositorioUsuarios.GetList(x => true);

            if (ListaUsuarios.Count == 0)
            {
                toast.ShowInfo("¡No hay datos para mostrar!");
            }
        }
        else
        {
            switch (Filtro)
            {
                case 0:
                    toast.ShowError("¡Opcion incorrecta!");
                    break;
                case 1:
                    ListaUsuarios = repositorioUsuarios.GetList(p => true);
                    break;
                case 2:
                    int id = Convert.ToInt32(Criterio);
                    ListaUsuarios = repositorioUsuarios.GetList(p => p.UsuarioId == id);
                    break;
                case 3:
                    ListaUsuarios = repositorioUsuarios.GetList(p => p.Nombres.Contains(Criterio));
                    break;
                case 4:
                    ListaUsuarios = repositorioUsuarios.GetList(p => p.Apellidos.Contains(Criterio));
                    break;
                case 5:
                    ListaUsuarios = repositorioUsuarios.GetList(p => p.NombreUsuario.Contains(Criterio));
                    break;
                case 6:
                    ListaUsuarios = repositorioUsuarios.GetList(p => p.TipoUsuario.Contains(Criterio));
                    break;
            }
            CalcularTotal();

            if (ListaUsuarios.Count == 0)
            {
                toast.ShowInfo("¡No hay datos para mostrar!");
            }
        }
    }

    public void CalcularTotal()
    {
        Total = 0;

        foreach (var item in ListaUsuarios)
        {
            Total++;
        }
    }
}
